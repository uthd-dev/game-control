{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/aubincspitzer/Documents/Game Control/game-control/client/src/components/admin-components/pages/dashboard.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport styled from \"styled-components\";\nimport Card from \"../stats-card\";\nimport { useEffect, useState } from \"react\";\n/* Socket.io */\n\nimport { io } from \"socket.io-client\";\nconst socket = io(\"/api/admin/ws\");\n\nfunction Dashboard(props) {\n  const {\n    0: userData,\n    1: setUserData\n  } = useState();\n  const {\n    0: liveData,\n    1: setLiveData\n  } = useState({\n    liveStreamCount: \"...\",\n    liveServerCount: \"...\",\n    onlinePlayerCount: \"...\",\n    discordIsOnline: false\n  });\n  useEffect(() => {\n    socket.on(\"connect\", () => {\n      console.log(`Socket connection established!`);\n    });\n    socket.on(\"update-userData\", data => {\n      setUserData(data);\n    });\n    socket.on(\"stats\", data => {\n      setLiveData(_objectSpread(_objectSpread({}, liveData), data));\n    });\n  });\n  useEffect(() => {\n    socket.emit(\"get-stats\");\n  }, []);\n\n  function toggleDiscordBot() {\n    console.log(`toggle-discord`);\n    socket.emit(\"toggle-discord\");\n  }\n\n  return /*#__PURE__*/_jsxDEV(Row, {\n    children: [/*#__PURE__*/_jsxDEV(Card, {\n      title: \"Live Streamers:\",\n      value: liveData.liveStreamCount\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Card, {\n      title: \"Online Players:\",\n      value: liveData.onlinePlayerCount\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Card, {\n      title: \"Connected Servers:\",\n      value: liveData.liveServerCount\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Card, {\n      title: \"Discord Bot:\",\n      value: liveData.discordIsOnline ? \"On\" : \"Off\",\n      customClickEvent: toggleDiscordBot\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this);\n}\n\nconst Row = styled.div`\n  width: 100%;\n\n  display: flex;\n  justify-content: flex-start;\n`;\nexport default Dashboard;","map":{"version":3,"sources":["/home/aubincspitzer/Documents/Game Control/game-control/client/src/components/admin-components/pages/dashboard.js"],"names":["styled","Card","useEffect","useState","io","socket","Dashboard","props","userData","setUserData","liveData","setLiveData","liveStreamCount","liveServerCount","onlinePlayerCount","discordIsOnline","on","console","log","data","emit","toggleDiscordBot","Row","div"],"mappings":";;;;;;;;;AAAA,OAAOA,MAAP,MAAmB,mBAAnB;AAEA,OAAOC,IAAP,MAAiB,eAAjB;AACA,SAASC,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AAEA;;AACA,SAASC,EAAT,QAAmB,kBAAnB;AACA,MAAMC,MAAM,GAAGD,EAAE,CAAC,eAAD,CAAjB;;AAEA,SAASE,SAAT,CAAmBC,KAAnB,EAA0B;AACxB,QAAM;AAAA,OAACC,QAAD;AAAA,OAAWC;AAAX,MAA0BN,QAAQ,EAAxC;AACA,QAAM;AAAA,OAACO,QAAD;AAAA,OAAWC;AAAX,MAA0BR,QAAQ,CAAC;AACvCS,IAAAA,eAAe,EAAE,KADsB;AAEvCC,IAAAA,eAAe,EAAE,KAFsB;AAGvCC,IAAAA,iBAAiB,EAAE,KAHoB;AAIvCC,IAAAA,eAAe,EAAE;AAJsB,GAAD,CAAxC;AAMAb,EAAAA,SAAS,CAAC,MAAM;AACdG,IAAAA,MAAM,CAACW,EAAP,CAAU,SAAV,EAAqB,MAAM;AACzBC,MAAAA,OAAO,CAACC,GAAR,CAAa,gCAAb;AACD,KAFD;AAGAb,IAAAA,MAAM,CAACW,EAAP,CAAU,iBAAV,EAA8BG,IAAD,IAAU;AACrCV,MAAAA,WAAW,CAACU,IAAD,CAAX;AACD,KAFD;AAGAd,IAAAA,MAAM,CAACW,EAAP,CAAU,OAAV,EAAoBG,IAAD,IAAU;AAC3BR,MAAAA,WAAW,iCACND,QADM,GAENS,IAFM,EAAX;AAID,KALD;AAMD,GAbQ,CAAT;AAcAjB,EAAAA,SAAS,CAAC,MAAM;AACdG,IAAAA,MAAM,CAACe,IAAP,CAAY,WAAZ;AACD,GAFQ,EAEN,EAFM,CAAT;;AAIF,WAASC,gBAAT,GAA4B;AAC1BJ,IAAAA,OAAO,CAACC,GAAR,CAAa,gBAAb;AACAb,IAAAA,MAAM,CAACe,IAAP,CAAY,gBAAZ;AACD;;AAEC,sBACE,QAAC,GAAD;AAAA,4BACE,QAAC,IAAD;AAAM,MAAA,KAAK,EAAC,iBAAZ;AAA8B,MAAA,KAAK,EAAEV,QAAQ,CAACE;AAA9C;AAAA;AAAA;AAAA;AAAA,YADF,eAEE,QAAC,IAAD;AAAM,MAAA,KAAK,EAAC,iBAAZ;AAA8B,MAAA,KAAK,EAAEF,QAAQ,CAACI;AAA9C;AAAA;AAAA;AAAA;AAAA,YAFF,eAGE,QAAC,IAAD;AAAM,MAAA,KAAK,EAAC,oBAAZ;AAAiC,MAAA,KAAK,EAAEJ,QAAQ,CAACG;AAAjD;AAAA;AAAA;AAAA;AAAA,YAHF,eAIE,QAAC,IAAD;AAAM,MAAA,KAAK,EAAC,cAAZ;AAA2B,MAAA,KAAK,EAAEH,QAAQ,CAACK,eAAT,GAA2B,IAA3B,GAAkC,KAApE;AAA2E,MAAA,gBAAgB,EAAEM;AAA7F;AAAA;AAAA;AAAA;AAAA,YAJF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAQD;;AAED,MAAMC,GAAG,GAAGtB,MAAM,CAACuB,GAAI;AACvB;AACA;AACA;AACA;AACA,CALA;AAOA,eAAejB,SAAf","sourcesContent":["import styled from \"styled-components\";\n\nimport Card from \"../stats-card\";\nimport { useEffect, useState } from \"react\";\n\n/* Socket.io */\nimport { io } from \"socket.io-client\";\nconst socket = io(\"/api/admin/ws\");\n\nfunction Dashboard(props) {\n  const [userData, setUserData] = useState();\n  const [liveData, setLiveData] = useState({\n    liveStreamCount: \"...\",\n    liveServerCount: \"...\",\n    onlinePlayerCount: \"...\",\n    discordIsOnline: false\n  });\n  useEffect(() => {\n    socket.on(\"connect\", () => {\n      console.log(`Socket connection established!`);\n    });\n    socket.on(\"update-userData\", (data) => {\n      setUserData(data);\n    });\n    socket.on(\"stats\", (data) => {\n      setLiveData({\n        ...liveData,\n        ...data,\n      });\n    });\n  });\n  useEffect(() => {\n    socket.emit(\"get-stats\");\n  }, []);\n\nfunction toggleDiscordBot() {\n  console.log(`toggle-discord`);\n  socket.emit(\"toggle-discord\")\n}\n\n  return (\n    <Row>\n      <Card title=\"Live Streamers:\" value={liveData.liveStreamCount} />\n      <Card title=\"Online Players:\" value={liveData.onlinePlayerCount} />\n      <Card title=\"Connected Servers:\" value={liveData.liveServerCount} />\n      <Card title=\"Discord Bot:\" value={liveData.discordIsOnline ? \"On\" : \"Off\"} customClickEvent={toggleDiscordBot}/>\n    </Row>\n  );\n}\n\nconst Row = styled.div`\n  width: 100%;\n\n  display: flex;\n  justify-content: flex-start;\n`;\n\nexport default Dashboard;\n"]},"metadata":{},"sourceType":"module"}