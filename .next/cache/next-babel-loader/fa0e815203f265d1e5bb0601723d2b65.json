{"ast":null,"code":"import { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n//used for client-side web requests\nimport axios from 'axios'; //Used for react function component's implementation of state\n\nimport { useState } from 'react'; //css-in-js\n\nimport styled from 'styled-components'; //Custom react \"theme\" for consistent \"layout\"\n\nimport Layout from '../../components/layout-components/layout';\n\nfunction Stream() {\n  /* CLIENT-SIDE JS */\n  //Init formData var & update func with useState\n  const {\n    0: formData,\n    1: setFormData\n  } = useState({\n    fname: \"\",\n    ign: \"\",\n    tel: \"\"\n  });\n  /* POSTs FormData to Streamer Signup API endpoint */\n\n  async function handleSubmit(event) {\n    event.preventDefault(); //Stops default form submission\n\n    const errText = document.getElementById(\"signup-err\"); //Shown on Error\n\n    errText.classList.add(\"hidden\");\n    const successText = document.getElementById(\"signup-success\"); //Shown on success\n\n    successText.innerHTML = \"Loading...\";\n    successText.classList.remove(\"hidden\");\n    await setTimeout(async () => {\n      if (formData.fname && formData.ign) {\n        //POST DATA\n        await axios.post(`/api/users/streamer-signup`, formData).then(res => {\n          console.log(res); //Uses the success var sent in res from server to determine status\n\n          if (res.data.success == true) {\n            //Shows success text & hides error text if need be\\\n            successText.innerHTML = res.data.response;\n            successText.classList.remove(\"hidden\");\n            if (!errText.classList.contains(\"hidden\")) errText.classList.add(\"hidden\");\n          } else if (res.data.success == false && res.data.response) {\n            //Shows Error text & updates contents, Hides success text if need be\n            errText.innerHTML = res.data.response;\n            errText.classList.remove(\"hidden\");\n            if (!successText.classList.contains(\"hidden\")) successText.classList.add(\"hidden\");\n          } else {\n            //Generic Error message if a success status var is unable to be parsed\n            console.log(res);\n            errText.innerHTML = \"Error! Server did not respond properly.\";\n            errText.classList.remove(\"hidden\");\n            if (!successText.classList.contains(\"hidden\")) successText.classList.add(\"hidden\");\n          }\n        }).catch(err => {\n          //Handles Axios error when unable to post, shows generic error\n          console.log(err);\n          errText.innerHTML = \"Error! Server did not respond.\";\n          errText.classList.remove(\"hidden\");\n          if (!successText.classList.contains(\"hidden\")) successText.classList.add(\"hidden\");\n        });\n      } else {\n        errText.innerHTML = \"Please fill out the required fields.\";\n        errText.classList.remove(\"hidden\");\n        if (!successText.classList.contains(\"hidden\")) successText.classList.add(\"hidden\");\n      }\n    }, 100);\n  }\n  /* Form Update Handlers */\n  //TO-DO: Make below more compact (1 function > 3)\n\n\n  function handleNameChange(event) {\n    setFormData({\n      fname: event.target.value,\n      ign: formData.ign,\n      tel: formData.tel\n    });\n  }\n\n  function handleIGNChange(event) {\n    setFormData({\n      fname: formData.fname,\n      ign: event.target.value,\n      tel: formData.tel\n    });\n  }\n\n  function handleTelChange(event) {\n    setFormData({\n      fname: formData.fname,\n      ign: formData.ign,\n      tel: event.target.value\n    });\n  }\n  /* COMPONENT HTML-IN-JS (JSX)*/\n\n\n  return /*#__PURE__*/_jsx(Layout, {\n    children: /*#__PURE__*/_jsxs(ContentWrapper, {\n      children: [/*#__PURE__*/_jsx(ImageWrapper, {\n        children: /*#__PURE__*/_jsx(Richie, {\n          src: \"/home/richie.svg\"\n        })\n      }), /*#__PURE__*/_jsxs(SignUpWrapper, {\n        children: [/*#__PURE__*/_jsx(PageTitle, {\n          children: \"Like to Stream?\"\n        }), /*#__PURE__*/_jsx(PageExceprt, {\n          children: \"Sign Up now to let viewers take control of your game!\"\n        }), /*#__PURE__*/_jsxs(Form, {\n          onSubmit: handleSubmit,\n          children: [/*#__PURE__*/_jsxs(Label, {\n            htmlFor: \"fname\",\n            children: [\"Full (legal) name: \", /*#__PURE__*/_jsx(\"span\", {\n              children: \"*\"\n            })]\n          }), /*#__PURE__*/_jsx(\"br\", {}), /*#__PURE__*/_jsx(Input, {\n            type: \"text\",\n            id: \"fname\",\n            name: \"fname\",\n            autocomplete: \"off\",\n            value: formData.fname,\n            onChange: handleNameChange\n          }), /*#__PURE__*/_jsx(\"br\", {}), /*#__PURE__*/_jsxs(Label, {\n            htmlFor: \"ign\",\n            children: [\"Minecraft IGN: \", /*#__PURE__*/_jsx(\"span\", {\n              children: \"*\"\n            })]\n          }), /*#__PURE__*/_jsx(\"br\", {}), /*#__PURE__*/_jsx(Input, {\n            type: \"ign\",\n            id: \"ign\",\n            name: \"ign\",\n            value: formData.ign,\n            onChange: handleIGNChange\n          }), /*#__PURE__*/_jsx(\"br\", {}), /*#__PURE__*/_jsx(Label, {\n            htmlFor: \"tel\",\n            children: \"Phone number:\"\n          }), /*#__PURE__*/_jsx(\"br\", {}), /*#__PURE__*/_jsx(Input, {\n            type: \"tel\",\n            id: \"tel\",\n            name: \"tel\",\n            placeholder: \"Optional\",\n            value: formData.tel,\n            onChange: handleTelChange\n          }), /*#__PURE__*/_jsx(SignUpButton, {\n            type: \"submit\",\n            children: /*#__PURE__*/_jsx(SignUpText, {\n              children: \"SIGN UP\"\n            })\n          }), /*#__PURE__*/_jsx(ResponseErr, {\n            id: \"signup-err\",\n            className: \"hidden\",\n            children: \"Error!\"\n          }), /*#__PURE__*/_jsx(ResponseSuccess, {\n            id: \"signup-success\",\n            className: \"hidden\",\n            children: \"Success!\"\n          })]\n        })]\n      })]\n    })\n  });\n}\n/* STYLING (CSS) */\n\n/* PAGE LAYOUT */\n\n\nconst ContentWrapper = styled.div`\n    width: 100%;\n    min-height: 100vh;\n    z-index: 1;\n\n    display: flex;\n    background-color: white;\n\n`;\nconst ImageWrapper = styled.div`\n    flex: 1;\n\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    \n    @media only screen and (max-width: 1400px) {\n        display: none;\n    }\n`;\nconst SignUpWrapper = styled.div`\n    flex: 2;\n    background-color: #101824;\n    height: 100vh;\n\n    display: flex;\n    flex-direction: column;\n    padding: 25px;\n\n    box-shadow: -4px 0px 6px 1px rgba(0, 0, 0, 0.35);\n\n    @media only screen and (max-width: 1400px) {\n        box-shadow: none;\n        flex: 1;\n        display: block;\n        margin: 0 auto;\n    }\n`;\n/* PAGE CONTENT */\n\nconst Richie = styled.img`\n    height: 50%;\n    min-width: 600px;\n    max-width: 100%;\n    padding-left: 20px;\n\n    @media only screen and (max-width: 1400px) {\n        display: none;\n    }\n`;\nconst PageTitle = styled.h3`\n    color: white;\n    font-weight: 800;\n    font-size: 80px;\n\n    margin: 0 auto;\n    text-align: center;\n\n    @media only screen and (max-width: 1400px) {\n        font-size: 60px;\n    }\n`;\nconst PageExceprt = styled.p`\n    font-size: 24px;\n    color: #C4C4C4;\n\n    margin: 0 auto;\n    text-align: center;\n`;\n/* SIGNUP FORM */\n\nconst Form = styled.form`\n    width: 25vw;\n    height: auto;\n    margin: 50px auto;\n\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n\n    box-shadow: 0px 0px 0px 3px #F0524C;\n    border-radius: 8px;\n\n    @media only screen and (max-width: 1400px) {\n        width: 75%;\n    }\n`;\nconst Input = styled.input`\n    margin: 10px auto;\n    border-radius: 5px;\n    height: auto;\n    min-height: 30px;\n    width: 50%;\n    min-width: 250px;\n    border: none;\n    outline: none;\n    padding-left: 10px;\n    @media only screen and (max-width: 1400px) {\n        height: 5vh\n    }\n`;\nconst Label = styled.label`\n    margin-top: 20px;\n\n    font-family: 'Montserrat', sans-serif;\n    font-size: 1em;\n\n    color: white;\n\n    span {\n        color: red;\n    }\n`;\n/* FORM RESPONSE TEXT */\n\nconst ResponseErr = styled.p`\n    color: red;\n    font-size: 16px;\n    margin: 10px 20px;\n`;\nconst ResponseSuccess = styled.p`\n    color: green;\n    font-size: 16px;\n    margin: 10px 20px;\n`;\n/* SIGN UP BUTTON */\n\nconst SignUpButton = styled.button`\n    height: 60px;\n    width: 150px;\n    margin: 20px 10px;\n    padding: 0 25px;\n\n    background: #F0524C;\n    border-radius: 8px;\n    \n    display: flex;\n    align-items: center;\n    \n    border: none;\n\n    cursor: pointer;\n\n    :hover {\n        box-shadow: 0px 0px 0px 3px #F0524C;\n        background: none;\n        transition: 150ms;\n    }\n\n    @media only screen and (max-width: 1400px) {\n        margin: 20px 0;\n    }\n    \n    transition: 150ms;\n    `;\nconst SignUpText = styled.h5`\n    font-size: 18px;\n    margin: 0 auto;\n`;\nexport default Stream;","map":null,"metadata":{},"sourceType":"module"}