{"ast":null,"code":"import nextConnect from \"next-connect\";\nimport middleware from \"../../../../../middleware/index\";\nimport passport from \". lib/auth/passport\";\nimport dbConnect from \"../../../../utils/dbConnect\";\nconst handler = nextConnect();\nhandler.use(middleware);\nhandler.get(passport.authenticate(\"twitch\", {\n  failureRedirect: \"/\"\n}), async (req, res) => {\n  await dbConnect(); // Successful authentication, redirect home (default) or returnTo (from session), and reset returnTo.\n\n  if (req.session.returnTo) {\n    let returnTo = req.session.returnTo;\n    req.session.returnTo = \"/\";\n    res.redirect(`${process.env.hostUrl}${returnTo}`);\n  } else res.redirect(\"/\");\n});\nexport default handler;","map":{"version":3,"sources":["D:/Dev/GitHub/game-control/pages/api/auth/twitch/callback.js"],"names":["nextConnect","middleware","passport","dbConnect","handler","use","get","authenticate","failureRedirect","req","res","session","returnTo","redirect","process","env","hostUrl"],"mappings":"AAAA,OAAOA,WAAP,MAAwB,cAAxB;AACA,OAAOC,UAAP,MAAuB,iCAAvB;AACA,OAAOC,QAAP,MAAqB,qBAArB;AACA,OAAOC,SAAP,MAAsB,6BAAtB;AAGA,MAAMC,OAAO,GAAGJ,WAAW,EAA3B;AAEAI,OAAO,CAACC,GAAR,CAAYJ,UAAZ;AAEAG,OAAO,CAACE,GAAR,CACEJ,QAAQ,CAACK,YAAT,CAAsB,QAAtB,EAAgC;AAAEC,EAAAA,eAAe,EAAE;AAAnB,CAAhC,CADF,EAEE,OAAOC,GAAP,EAAYC,GAAZ,KAAoB;AAElB,QAAMP,SAAS,EAAf,CAFkB,CAGlB;;AACA,MAAIM,GAAG,CAACE,OAAJ,CAAYC,QAAhB,EAA0B;AACxB,QAAIA,QAAQ,GAAGH,GAAG,CAACE,OAAJ,CAAYC,QAA3B;AACAH,IAAAA,GAAG,CAACE,OAAJ,CAAYC,QAAZ,GAAuB,GAAvB;AACAF,IAAAA,GAAG,CAACG,QAAJ,CAAc,GAAEC,OAAO,CAACC,GAAR,CAAYC,OAAQ,GAAEJ,QAAS,EAA/C;AACD,GAJD,MAIOF,GAAG,CAACG,QAAJ,CAAa,GAAb;AACR,CAXH;AAcA,eAAeT,OAAf","sourcesContent":["import nextConnect from \"next-connect\";\r\nimport middleware from \"../../../../../middleware/index\";\r\nimport passport from \". lib/auth/passport\";\r\nimport dbConnect from \"../../../../utils/dbConnect\";\r\n\r\n\r\nconst handler = nextConnect();\r\n\r\nhandler.use(middleware);\r\n\r\nhandler.get(\r\n  passport.authenticate(\"twitch\", { failureRedirect: \"/\" }),\r\n  async (req, res) => {\r\n\r\n    await dbConnect();\r\n    // Successful authentication, redirect home (default) or returnTo (from session), and reset returnTo.\r\n    if (req.session.returnTo) {\r\n      let returnTo = req.session.returnTo;\r\n      req.session.returnTo = \"/\";\r\n      res.redirect(`${process.env.hostUrl}${returnTo}`);\r\n    } else res.redirect(\"/\");\r\n  }\r\n);\r\n\r\nexport default handler;"]},"metadata":{},"sourceType":"module"}