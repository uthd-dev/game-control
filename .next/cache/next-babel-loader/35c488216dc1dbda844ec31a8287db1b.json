{"ast":null,"code":"import { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport styled from \"styled-components\";\nimport Card from \"../stats-card\";\nimport { useEffect, useState } from \"react\";\n/* Socket.io */\n\nimport { io } from \"socket.io-client\";\nconst socket = io(\"/api/admin/ws\");\n\nfunction Dashboard(props) {\n  const {\n    0: userData,\n    1: setUserData\n  } = useState();\n  const {\n    0: liveData,\n    1: setLiveData\n  } = useState({\n    liveStreamCount: \"...\",\n    liveServerCount: \"...\",\n    onlinePlayerCount: \"...\",\n    discordIsOnline: false\n  });\n  useEffect(() => {\n    socket.on(\"connect\", () => {\n      console.log(`Socket connection established!`);\n    });\n    socket.on(\"update-userData\", data => {\n      setUserData(data);\n    });\n    socket.on(\"stats\", data => {\n      setLiveData(_objectSpread(_objectSpread({}, liveData), data));\n    });\n  });\n  useEffect(() => {\n    socket.emit(\"get-stats\");\n  }, []);\n\n  function toggleDiscordBot() {\n    console.log(`toggle-discord`);\n    socket.emit(\"toggle-discord\");\n  }\n\n  return /*#__PURE__*/_jsxs(Row, {\n    children: [/*#__PURE__*/_jsx(Card, {\n      title: \"Live Streamers:\",\n      value: liveData.liveStreamCount\n    }), /*#__PURE__*/_jsx(Card, {\n      title: \"Online Players:\",\n      value: liveData.onlinePlayerCount\n    }), /*#__PURE__*/_jsx(Card, {\n      title: \"Connected Servers:\",\n      value: liveData.liveServerCount\n    }), /*#__PURE__*/_jsx(Card, {\n      title: \"Discord Bot:\",\n      value: liveData.discordIsOnline ? \"On\" : \"Off\",\n      customClickEvent: toggleDiscordBot\n    })]\n  });\n}\n\nconst Row = styled.div`\n  width: 100%;\n\n  display: flex;\n  justify-content: flex-start;\n`;\nexport default Dashboard;","map":null,"metadata":{},"sourceType":"module"}