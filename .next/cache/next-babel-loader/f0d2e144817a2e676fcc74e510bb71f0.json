{"ast":null,"code":"import { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n//Component Imports\nimport Link from \"next/link\";\nimport ButtonHelp from \"../../components/play-components/buttonHelp\";\nimport ButtonHurt from \"../../components/play-components/buttonHurt\";\nimport Layout from \"../../components/layout-components/layout\";\nimport StreamerSidebar from \"../../components/play-components/streamerSidebar\"; //Useful Stuff Imports\n\nimport { TwitchEmbed } from \"react-twitch-embed\";\nimport styled from \"styled-components\";\nimport { useEffect, useState } from \"react\";\n/* Socket.io */\n\nimport { io } from \"socket.io-client\";\nconst socket = io(\"/api/users/ws\");\n\nfunction StreamerGameControl(props) {\n  const {\n    0: userData,\n    1: setUserData\n  } = useState();\n  const {\n    0: streamerData,\n    1: setStreamerData\n  } = useState();\n  useEffect(() => {\n    socket.on(\"connect\", () => {\n      console.log(`Socket connection established!`);\n    });\n    socket.on(\"update-userData\", data => {\n      setUserData(data);\n    });\n    socket.on(\"update-streamerData\", data => {\n      setStreamerData(data);\n    });\n  }, []);\n  return /*#__PURE__*/_jsxs(Layout, {\n    children: [/*#__PURE__*/_jsx(StreamerSidebar, {\n      streamerData: streamerData\n    }), /*#__PURE__*/_jsxs(ContentWrapper, {\n      children: [/*#__PURE__*/_jsx(RowOneWrapper, {\n        children: /*#__PURE__*/_jsx(Twitch, {\n          children: /*#__PURE__*/_jsx(TwitchEmbed, {\n            channel: \"uthd\",\n            id: \"uthd\",\n            muted: true,\n            theme: \"dark\",\n            height: \"100%\",\n            width: \"100%\"\n          })\n        })\n      }), /*#__PURE__*/_jsx(RowTwoWrapper, {\n        children: /*#__PURE__*/_jsxs(GameControl, {\n          children: [/*#__PURE__*/_jsx(ButtonHelp, {\n            title: \"Enchant Held Item\",\n            action: \"enchant\"\n          }), /*#__PURE__*/_jsx(ButtonHelp, {\n            title: \"Heal Player\",\n            action: \"heal-player\"\n          }), /*#__PURE__*/_jsx(ButtonHelp, {\n            title: \"Give Item\",\n            action: \"give-item\"\n          }), /*#__PURE__*/_jsx(ButtonHelp, {\n            title: \"Give Good Potion Effect\",\n            action: \"good-potion\"\n          }), /*#__PURE__*/_jsx(ButtonHurt, {\n            title: \"Give Bad Potion Effect\",\n            action: \"bad-potion\"\n          }), /*#__PURE__*/_jsx(ButtonHurt, {\n            title: \"Clear Inventory\",\n            action: \"clear-inv\"\n          }), /*#__PURE__*/_jsx(ButtonHurt, {\n            title: \"Summon Mob\",\n            action: \"summon-mob\"\n          }), /*#__PURE__*/_jsx(ButtonHurt, {\n            title: \"etc.\"\n          })]\n        })\n      }), /*#__PURE__*/_jsxs(RowThreeWrapper, {\n        children: [/*#__PURE__*/_jsxs(Stats, {\n          children: [/*#__PURE__*/_jsx(\"h3\", {\n            children: \"User Info\"\n          }), /*#__PURE__*/_jsxs(\"h5\", {\n            children: [/*#__PURE__*/_jsx(\"span\", {\n              children: \"Shards: \"\n            }), userData ? userData.stats.shards : `Loading...`]\n          })]\n        }), /*#__PURE__*/_jsxs(Leaderboard, {\n          children: [/*#__PURE__*/_jsx(\"h3\", {\n            children: \"Leaderboard\"\n          }), /*#__PURE__*/_jsxs(\"h5\", {\n            children: [/*#__PURE__*/_jsx(\"span\", {\n              children: \"Top Player: \"\n            }), \"Loading...\"]\n          })]\n        })]\n      })]\n    })]\n  });\n}\n\nconst ContentWrapper = styled.div`\n  min-height: calc(100vh - 80px);\n  width: calc(100vw - 72px);\n  margin-left: 72px;\n\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n`;\nconst RowOneWrapper = styled.div`\n  min-height: 800px;\n  width: 80vw;\n  display: flex;\n  justify-content: center;\n  flex-wrap: wrap;\n  overflow: hidden;\n  margin: 0;\n`;\nconst RowTwoWrapper = styled.div`\n  justify-content: center;\n\n  display: -webkit-box;\n  display: -moz-box;\n  display: -ms-flexbox;\n  display: -moz-flex;\n  display: -webkit-flex;\n  display: flex;\n\n  margin: 0;\n`;\nconst RowThreeWrapper = styled.div`\n  width: 100%;\n  justify-content: center;\n\n  display: -webkit-box;\n  display: -moz-box;\n  display: -ms-flexbox;\n  display: -moz-flex;\n  display: -webkit-flex;\n  display: flex;\n`;\nconst Twitch = styled.div`\n  width: auto;\n  min-width: 65vw;\n  height: 720px;\n  background-color: gray;\n  margin: 20px;\n  border-radius: 5px;\n  border: 5px solid #f0524c;\n`;\nconst GameControl = styled.div`\n  margin: 0 auto;\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-between;\n  justify-self: left;\n  margin: 0 50px;\n`;\nconst Stats = styled.div`\n  min-height: 500px;\n  min-width: 300px;\n\n  box-shadow: 0px 0px 0px 3px #f0524c;\n  border-radius: 8px;\n  background: none;\n\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  margin: 25px;\n  h3 {\n    text-align: center;\n    font-size: 36px;\n    margin: 0 auto;\n  }\n  h5 {\n    text-align: center;\n    font-size: 20px;\n    margin: 0 auto;\n    font-weight: 200;\n  }\n  span {\n    font-size: 24px;\n    font-weight: 600;\n  }\n`;\nconst Leaderboard = styled.div`\n  min-height: 500px;\n  min-width: 300px;\n\n  box-shadow: 0px 0px 0px 3px #f0524c;\n  border-radius: 8px;\n  background: none;\n\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  margin: 25px;\n  h3 {\n    text-align: center;\n    font-size: 36px;\n    margin: 0 auto;\n  }\n  h5 {\n    text-align: center;\n    font-size: 20px;\n    margin: 0 auto;\n    font-weight: 200;\n  }\n  span {\n    font-size: 24px;\n    font-weight: 600;\n  }\n`; //Props getting\n\n/*\r\nexport async function getStaticPaths() {\r\n    const paths = await getAllPageSlugs();\r\n    return {\r\n        fallback: 'blocking',\r\n        paths\r\n    }\r\n  }\r\n\r\nexport async function getStaticProps({ params }) {\r\n    const pageData = await getPageDataFromSlug(params.slug);\r\n    return {\r\n        revalidate: 5,\r\n        props: {pageData}\r\n    }\r\n}\r\n\r\nasync function getAllPageSlugs () {\r\n    const pages = await getPages();\r\n    return pages.map(page => {\r\n        return {\r\n            params: {\r\n                slug: page.slug\r\n            }\r\n        }\r\n    })\r\n}*/\n\nexport default StreamerGameControl;","map":null,"metadata":{},"sourceType":"module"}