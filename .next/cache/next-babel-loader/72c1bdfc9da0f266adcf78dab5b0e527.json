{"ast":null,"code":"import nextConnect from \"next-connect\";\nimport middleware from \"../../../../middleware/index\";\nimport passport from \"../../../../lib/auth/passport\";\nconst handler = nextConnect();\nhandler.use(middleware);\nhandler.get(passport.authenticate(\"twitch\", {\n  failureRedirect: \"/\"\n}), async (req, res) => {\n  // Successful authentication, redirect home (default) or returnTo (from session), and reset returnTo.\n  if (req.session.returnTo) {\n    let returnTo = req.session.returnTo;\n    req.session.returnTo = \"/\";\n    res.redirect(`${process.env.hostUrl}${returnTo}`);\n  } else res.redirect(\"/\");\n});\nexport default handler;","map":{"version":3,"sources":["D:/Dev/GitHub/game-control/pages/api/auth/twitch/callback.js"],"names":["nextConnect","middleware","passport","handler","use","get","authenticate","failureRedirect","req","res","session","returnTo","redirect","process","env","hostUrl"],"mappings":"AAAA,OAAOA,WAAP,MAAwB,cAAxB;AACA,OAAOC,UAAP,MAAuB,8BAAvB;AACA,OAAOC,QAAP,MAAqB,+BAArB;AAEA,MAAMC,OAAO,GAAGH,WAAW,EAA3B;AAEAG,OAAO,CAACC,GAAR,CAAYH,UAAZ;AAEAE,OAAO,CAACE,GAAR,CACEH,QAAQ,CAACI,YAAT,CAAsB,QAAtB,EAAgC;AAAEC,EAAAA,eAAe,EAAE;AAAnB,CAAhC,CADF,EAEE,OAAOC,GAAP,EAAYC,GAAZ,KAAoB;AAClB;AACA,MAAID,GAAG,CAACE,OAAJ,CAAYC,QAAhB,EAA0B;AACxB,QAAIA,QAAQ,GAAGH,GAAG,CAACE,OAAJ,CAAYC,QAA3B;AACAH,IAAAA,GAAG,CAACE,OAAJ,CAAYC,QAAZ,GAAuB,GAAvB;AACAF,IAAAA,GAAG,CAACG,QAAJ,CAAc,GAAEC,OAAO,CAACC,GAAR,CAAYC,OAAQ,GAAEJ,QAAS,EAA/C;AACD,GAJD,MAIOF,GAAG,CAACG,QAAJ,CAAa,GAAb;AACR,CATH;AAYA,eAAeT,OAAf","sourcesContent":["import nextConnect from \"next-connect\";\r\nimport middleware from \"../../../../middleware/index\";\r\nimport passport from \"../../../../lib/auth/passport\";\r\n\r\nconst handler = nextConnect();\r\n\r\nhandler.use(middleware);\r\n\r\nhandler.get(\r\n  passport.authenticate(\"twitch\", { failureRedirect: \"/\" }),\r\n  async (req, res) => {\r\n    // Successful authentication, redirect home (default) or returnTo (from session), and reset returnTo.\r\n    if (req.session.returnTo) {\r\n      let returnTo = req.session.returnTo;\r\n      req.session.returnTo = \"/\";\r\n      res.redirect(`${process.env.hostUrl}${returnTo}`);\r\n    } else res.redirect(\"/\");\r\n  }\r\n);\r\n\r\nexport default handler;"]},"metadata":{},"sourceType":"module"}