{"ast":null,"code":"import _taggedTemplateLiteral from \"/home/aubincspitzer/Documents/Game Control/game-control/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nimport _defineProperty from \"/home/aubincspitzer/Documents/Game Control/game-control/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/aubincspitzer/Documents/Game Control/game-control/client/src/components/admin-components/pages/dashboard.js\",\n    _s = $RefreshSig$();\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n    width: 100%;\\n\\n    display: flex;\\n    justify-content: flex-start;\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport styled from 'styled-components';\nimport Card from '../stats-card';\nimport { useEffect, useState } from 'react';\n/* Socket.io */\n\nimport { io } from \"socket.io-client\";\nvar socket = io(\"/api/admin/ws\");\n\nfunction Dashboard(props) {\n  _s();\n\n  var _useState = useState(),\n      userData = _useState[0],\n      setUserData = _useState[1];\n\n  var _useState2 = useState({\n    liveStreamCount: \"...\",\n    liveServerCount: \"...\",\n    onlinePlayerCount: \"...\"\n  }),\n      liveData = _useState2[0],\n      setLiveData = _useState2[1];\n\n  useEffect(function () {\n    socket.on(\"connect\", function () {\n      console.log(\"Socket connection established!\");\n    });\n    socket.on(\"update-userData\", function (data) {\n      setUserData(data);\n    });\n    socket.on(\"stats\", function (data) {\n      setLiveData(_objectSpread(_objectSpread({}, liveData), data));\n    });\n  });\n  useEffect(function () {\n    socket.emit('get-stats');\n  });\n  return /*#__PURE__*/_jsxDEV(Row, {\n    children: [/*#__PURE__*/_jsxDEV(Card, {\n      title: \"Live Streamers:\",\n      value: liveData.liveStreamCount\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Card, {\n      title: \"Online Players\",\n      value: liveData.onlinePlayerCount\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Card, {\n      title: \"Connected Servers\",\n      value: liveData.liveServerCount\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Dashboard, \"GH0bUxy/wDcKvkGnfGwmjFOvLxg=\");\n\n_c = Dashboard;\nvar Row = styled.div(_templateObject());\n_c2 = Row;\nexport default Dashboard;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Dashboard\");\n$RefreshReg$(_c2, \"Row\");","map":{"version":3,"sources":["/home/aubincspitzer/Documents/Game Control/game-control/client/src/components/admin-components/pages/dashboard.js"],"names":["styled","Card","useEffect","useState","io","socket","Dashboard","props","userData","setUserData","liveStreamCount","liveServerCount","onlinePlayerCount","liveData","setLiveData","on","console","log","data","emit","Row","div"],"mappings":";;;;;;;;;;;;;;;;;;;;;AAAA,OAAOA,MAAP,MAAmB,mBAAnB;AAEA,OAAOC,IAAP,MAAiB,eAAjB;AACA,SAASC,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AAEA;;AACA,SAASC,EAAT,QAAmB,kBAAnB;AACA,IAAMC,MAAM,GAAGD,EAAE,CAAC,eAAD,CAAjB;;AAGA,SAASE,SAAT,CAAoBC,KAApB,EAA2B;AAAA;;AAAA,kBACSJ,QAAQ,EADjB;AAAA,MAChBK,QADgB;AAAA,MACNC,WADM;;AAAA,mBAESN,QAAQ,CAAC;AACrCO,IAAAA,eAAe,EAAE,KADoB;AAErCC,IAAAA,eAAe,EAAE,KAFoB;AAGrCC,IAAAA,iBAAiB,EAAE;AAHkB,GAAD,CAFjB;AAAA,MAEhBC,QAFgB;AAAA,MAENC,WAFM;;AAOvBZ,EAAAA,SAAS,CAAC,YAAM;AACZG,IAAAA,MAAM,CAACU,EAAP,CAAU,SAAV,EAAqB,YAAM;AACvBC,MAAAA,OAAO,CAACC,GAAR;AACD,KAFH;AAGEZ,IAAAA,MAAM,CAACU,EAAP,CAAU,iBAAV,EAA6B,UAACG,IAAD,EAAU;AACrCT,MAAAA,WAAW,CAACS,IAAD,CAAX;AACD,KAFD;AAGAb,IAAAA,MAAM,CAACU,EAAP,CAAU,OAAV,EAAmB,UAACG,IAAD,EAAU;AAC3BJ,MAAAA,WAAW,iCACJD,QADI,GAEJK,IAFI,EAAX;AAID,KALD;AAML,GAbQ,CAAT;AAcAhB,EAAAA,SAAS,CAAC,YAAM;AACZG,IAAAA,MAAM,CAACc,IAAP,CAAY,WAAZ;AACH,GAFQ,CAAT;AAGA,sBACI,QAAC,GAAD;AAAA,4BACI,QAAC,IAAD;AAAM,MAAA,KAAK,EAAC,iBAAZ;AAA8B,MAAA,KAAK,EAAEN,QAAQ,CAACH;AAA9C;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI,QAAC,IAAD;AAAM,MAAA,KAAK,EAAC,gBAAZ;AAA6B,MAAA,KAAK,EAAEG,QAAQ,CAACD;AAA7C;AAAA;AAAA;AAAA;AAAA,YAFJ,eAGI,QAAC,IAAD;AAAM,MAAA,KAAK,EAAC,mBAAZ;AAAgC,MAAA,KAAK,EAAEC,QAAQ,CAACF;AAAhD;AAAA;AAAA;AAAA;AAAA,YAHJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAOH;;GA/BQL,S;;KAAAA,S;AAiCT,IAAMc,GAAG,GAAGpB,MAAM,CAACqB,GAAV,mBAAT;MAAMD,G;AAON,eAAed,SAAf","sourcesContent":["import styled from 'styled-components'\n\nimport Card from '../stats-card'\nimport { useEffect, useState } from 'react';\n\n/* Socket.io */\nimport { io } from \"socket.io-client\";\nconst socket = io(\"/api/admin/ws\");\n\n\nfunction Dashboard (props) {\n    const [userData, setUserData] = useState();\n    const [liveData, setLiveData] = useState({\n        liveStreamCount: \"...\",\n        liveServerCount: \"...\",\n        onlinePlayerCount: \"...\"\n    });\n    useEffect(() => {\n        socket.on(\"connect\", () => {\n            console.log(`Socket connection established!`);\n          });\n          socket.on(\"update-userData\", (data) => {\n            setUserData(data);\n          });\n          socket.on(\"stats\", (data) => {\n            setLiveData({\n                ...liveData,\n                ...data\n            });\n          });\n    });\n    useEffect(() => {\n        socket.emit('get-stats');\n    })\n    return(\n        <Row>\n            <Card title=\"Live Streamers:\" value={liveData.liveStreamCount} />\n            <Card title=\"Online Players\" value={liveData.onlinePlayerCount} />\n            <Card title=\"Connected Servers\" value={liveData.liveServerCount} />\n        </Row>\n    );\n}\n\nconst Row = styled.div`\n    width: 100%;\n\n    display: flex;\n    justify-content: flex-start;\n`;\n\nexport default Dashboard;"]},"metadata":{},"sourceType":"module"}