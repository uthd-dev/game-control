{"ast":null,"code":"import { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n//Component Imports\nimport Link from 'next/link';\nimport ButtonHelp from '../../components/ButtonHelp';\nimport ButtonHurt from '../../components/buttonHurt';\nimport Layout from '../../components/layout';\nimport StreamerSidebar from '../../components/streamerSidebar'; //Useful Stuff Imports\n\nimport { TwitchEmbed, TwitchChat, TwitchClip, TwitchPlayer } from 'react-twitch-embed';\nimport styled from 'styled-components';\nimport axios from 'axios';\n\nfunction StreamerGameControl(props) {\n  updateUserData();\n  return /*#__PURE__*/_jsxs(Layout, {\n    children: [/*#__PURE__*/_jsx(StreamerSidebar, {}), /*#__PURE__*/_jsxs(ContentWrapper, {\n      children: [/*#__PURE__*/_jsx(RowOneWrapper, {\n        children: /*#__PURE__*/_jsx(Twitch, {\n          children: /*#__PURE__*/_jsx(TwitchEmbed, {\n            channel: \"uthd\",\n            id: \"uthd\",\n            theme: \"dark\",\n            muted: true,\n            height: \"100%\",\n            width: \"100%\"\n          })\n        })\n      }), /*#__PURE__*/_jsx(RowTwoWrapper, {\n        children: /*#__PURE__*/_jsxs(GameControl, {\n          children: [/*#__PURE__*/_jsx(ButtonHelp, {\n            title: \"Enchant Held Item\"\n          }), /*#__PURE__*/_jsx(ButtonHelp, {\n            title: \"Refill Health\"\n          }), /*#__PURE__*/_jsx(ButtonHelp, {\n            title: \"Give Items\"\n          }), /*#__PURE__*/_jsx(ButtonHelp, {\n            title: \"Give Helpful Potion Effect\"\n          }), /*#__PURE__*/_jsx(ButtonHurt, {\n            title: \"Give Annoying Potion Effect\"\n          }), /*#__PURE__*/_jsx(ButtonHurt, {\n            title: \"Take items\"\n          }), /*#__PURE__*/_jsx(ButtonHurt, {\n            title: \"Summon Mobs\"\n          }), /*#__PURE__*/_jsx(ButtonHurt, {\n            title: \"Misc.\"\n          })]\n        })\n      }), /*#__PURE__*/_jsxs(RowThreeWrapper, {\n        children: [/*#__PURE__*/_jsxs(Stats, {\n          children: [/*#__PURE__*/_jsx(\"h3\", {\n            children: \"Stats\"\n          }), /*#__PURE__*/_jsxs(\"h5\", {\n            children: [/*#__PURE__*/_jsx(\"span\", {\n              children: \"Shards:\"\n            }), \"   Loading...\"]\n          })]\n        }), /*#__PURE__*/_jsxs(Leaderboard, {\n          children: [/*#__PURE__*/_jsx(\"h3\", {\n            children: \"Leaderboard\"\n          }), /*#__PURE__*/_jsx(\"h5\", {\n            children: /*#__PURE__*/_jsx(\"span\", {\n              children: \"Top Player: \"\n            })\n          })]\n        })]\n      })]\n    })]\n  });\n}\n\nconst ContentWrapper = styled.div`\n    min-height: calc(100vh - 80px);\n    width: calc(100vw - 72px);\n    margin-left: 72px;\n\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n`;\nconst RowOneWrapper = styled.div`\n    min-height: 800px;\n    width: 80vw;\n    display: flex;\n    justify-content: center;\n    flex-wrap: wrap;\n    overflow: hidden;\n    margin: 0;\n`;\nconst RowTwoWrapper = styled.div`\n    justify-content: center;\n\n    display: -webkit-box;\n    display: -moz-box;\n    display: -ms-flexbox;\n    display: -moz-flex;\n    display: -webkit-flex;\n    display: flex;\n\n    margin: 0;\n`;\nconst RowThreeWrapper = styled.div`\n    width: 100%;\n    justify-content: center;\n\n    display: -webkit-box;\n    display: -moz-box;\n    display: -ms-flexbox;\n    display: -moz-flex;\n    display: -webkit-flex;\n    display: flex;\n`;\nconst Twitch = styled.div`\n    width: 80vw;\n    height: 720px;\n    background-color: gray;\n    margin: 20px;\n`;\nconst GameControl = styled.div`\n    margin: 0 auto;\n    display: flex;\n    flex-wrap: wrap;\n    justify-content: space-between;\n    justify-self: left;\n`;\nconst Stats = styled.div`\n    min-height: 500px;\n    min-width: 300px;\n\n    box-shadow: 0px 0px 0px 3px #F0524C;\n    border-radius: 8px;\n    background: none;\n\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    margin: 25px;\n    h3 {\n        text-align: center;\n        font-size: 36px;\n        margin: 0 auto;\n    }\n    h5 {\n        text-align: center;\n        font-size: 20px;\n        margin: 0 auto;\n        font-weight: 200;\n    }\n    span {\n        font-size: 24px;\n        font-weight: 600;\n    }\n`;\nconst Leaderboard = styled.div`\n    min-height: 500px;\n    min-width: 300px;\n\n    box-shadow: 0px 0px 0px 3px #F0524C;\n    border-radius: 8px;\n    background: none;\n\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    margin: 25px;\n    h3 {\n        text-align: center;\n        font-size: 36px;\n        margin: 0 auto;\n    }\n    h5 {\n        text-align: center;\n        font-size: 20px;\n        margin: 0 auto;\n        font-weight: 200;\n    }\n    span {\n        font-size: 24px;\n        font-weight: 600;\n    }\n`;\n\nasync function updateUserData() {\n  try {\n    //Retrieve data from REST API endpoint, on success, update the profile Pic and UserData object, on failure, log the error.\n    const response = await axios.get('https://gc.uthd.dev/api/users'); //waits for axios to complete GET request to /api/users, returns an object \"user\"\n\n    userData = response.data.user;\n\n    if (userData.loggedIn == true) {\n      document.getElementById(\"profileImg\").src = `${userData.profileImg}`;\n      document.getElementById(\"profileImg\").classList.remove(\"hidden\");\n      document.getElementById(\"si-button\").classList.add(\"hidden\");\n    }\n  } catch (err) {\n    console.log(err);\n  }\n} //Props getting\n\n/*\r\nexport async function getStaticPaths() {\r\n    const paths = await getAllPageSlugs();\r\n    return {\r\n        fallback: 'blocking',\r\n        paths\r\n    }\r\n  }\r\n\r\nexport async function getStaticProps({ params }) {\r\n    const pageData = await getPageDataFromSlug(params.slug);\r\n    return {\r\n        revalidate: 5,\r\n        props: {pageData}\r\n    }\r\n}\r\n\r\nasync function getAllPageSlugs () {\r\n    const pages = await getPages();\r\n    return pages.map(page => {\r\n        return {\r\n            params: {\r\n                slug: page.slug\r\n            }\r\n        }\r\n    })\r\n}*/\n\n\nexport default StreamerGameControl;","map":{"version":3,"sources":["D:/Dev/GitHub/game-control/client/src/pages/play/uthd.js"],"names":["Link","ButtonHelp","ButtonHurt","Layout","StreamerSidebar","TwitchEmbed","TwitchChat","TwitchClip","TwitchPlayer","styled","axios","StreamerGameControl","props","updateUserData","ContentWrapper","div","RowOneWrapper","RowTwoWrapper","RowThreeWrapper","Twitch","GameControl","Stats","Leaderboard","response","get","userData","data","user","loggedIn","document","getElementById","src","profileImg","classList","remove","add","err","console","log"],"mappings":"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","sourcesContent":["//Component Imports\r\nimport Link from 'next/link';\r\nimport ButtonHelp from '../../components/ButtonHelp';\r\nimport ButtonHurt from '../../components/buttonHurt';\r\nimport Layout from '../../components/layout';\r\nimport StreamerSidebar from '../../components/streamerSidebar';\r\n\r\n//Useful Stuff Imports\r\nimport { TwitchEmbed, TwitchChat, TwitchClip, TwitchPlayer } from 'react-twitch-embed';\r\nimport styled from 'styled-components';\r\nimport axios from 'axios';\r\n\r\nfunction StreamerGameControl (props) {\r\n    updateUserData();\r\n    return (\r\n        <Layout>\r\n            <StreamerSidebar>\r\n\r\n            </StreamerSidebar>\r\n            <ContentWrapper>\r\n                \r\n                <RowOneWrapper>\r\n                    <Twitch>\r\n                        <TwitchEmbed \r\n                            channel=\"uthd\"\r\n                            id=\"uthd\"\r\n                            theme=\"dark\"\r\n                            muted\r\n                            height=\"100%\"\r\n                            width=\"100%\"\r\n                        />\r\n                    </Twitch>\r\n                </RowOneWrapper>\r\n                <RowTwoWrapper>\r\n                    <GameControl>\r\n                        <ButtonHelp title=\"Enchant Held Item\"></ButtonHelp>\r\n                        <ButtonHelp title=\"Refill Health\"></ButtonHelp>\r\n                        <ButtonHelp title=\"Give Items\"></ButtonHelp>\r\n                        <ButtonHelp title=\"Give Helpful Potion Effect\"></ButtonHelp>\r\n                        <ButtonHurt title=\"Give Annoying Potion Effect\"></ButtonHurt>\r\n                        <ButtonHurt title=\"Take items\"></ButtonHurt>\r\n                        <ButtonHurt title=\"Summon Mobs\"></ButtonHurt>\r\n                        <ButtonHurt title=\"Misc.\"></ButtonHurt>\r\n                    </GameControl>\r\n                </RowTwoWrapper>\r\n                <RowThreeWrapper>\r\n                    <Stats>\r\n                        <h3>Stats</h3>\r\n                        <h5><span>Shards:</span>   Loading...</h5>\r\n                    </Stats>\r\n                    <Leaderboard>\r\n                        <h3>Leaderboard</h3>\r\n                        <h5><span>Top Player: </span></h5>\r\n                    </Leaderboard>\r\n                </RowThreeWrapper>\r\n            </ContentWrapper>\r\n        </Layout>\r\n    );\r\n}\r\n\r\nconst ContentWrapper = styled.div`\r\n    min-height: calc(100vh - 80px);\r\n    width: calc(100vw - 72px);\r\n    margin-left: 72px;\r\n\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: center;\r\n`;\r\nconst RowOneWrapper = styled.div`\r\n    min-height: 800px;\r\n    width: 80vw;\r\n    display: flex;\r\n    justify-content: center;\r\n    flex-wrap: wrap;\r\n    overflow: hidden;\r\n    margin: 0;\r\n`; \r\nconst RowTwoWrapper = styled.div`\r\n    justify-content: center;\r\n\r\n    display: -webkit-box;\r\n    display: -moz-box;\r\n    display: -ms-flexbox;\r\n    display: -moz-flex;\r\n    display: -webkit-flex;\r\n    display: flex;\r\n\r\n    margin: 0;\r\n`;\r\nconst RowThreeWrapper = styled.div`\r\n    width: 100%;\r\n    justify-content: center;\r\n\r\n    display: -webkit-box;\r\n    display: -moz-box;\r\n    display: -ms-flexbox;\r\n    display: -moz-flex;\r\n    display: -webkit-flex;\r\n    display: flex;\r\n`;\r\n\r\nconst Twitch = styled.div`\r\n    width: 80vw;\r\n    height: 720px;\r\n    background-color: gray;\r\n    margin: 20px;\r\n`;\r\nconst GameControl = styled.div`\r\n    margin: 0 auto;\r\n    display: flex;\r\n    flex-wrap: wrap;\r\n    justify-content: space-between;\r\n    justify-self: left;\r\n`;\r\nconst Stats = styled.div`\r\n    min-height: 500px;\r\n    min-width: 300px;\r\n\r\n    box-shadow: 0px 0px 0px 3px #F0524C;\r\n    border-radius: 8px;\r\n    background: none;\r\n\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: center;\r\n    margin: 25px;\r\n    h3 {\r\n        text-align: center;\r\n        font-size: 36px;\r\n        margin: 0 auto;\r\n    }\r\n    h5 {\r\n        text-align: center;\r\n        font-size: 20px;\r\n        margin: 0 auto;\r\n        font-weight: 200;\r\n    }\r\n    span {\r\n        font-size: 24px;\r\n        font-weight: 600;\r\n    }\r\n`;\r\nconst Leaderboard = styled.div`\r\n    min-height: 500px;\r\n    min-width: 300px;\r\n\r\n    box-shadow: 0px 0px 0px 3px #F0524C;\r\n    border-radius: 8px;\r\n    background: none;\r\n\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: center;\r\n    margin: 25px;\r\n    h3 {\r\n        text-align: center;\r\n        font-size: 36px;\r\n        margin: 0 auto;\r\n    }\r\n    h5 {\r\n        text-align: center;\r\n        font-size: 20px;\r\n        margin: 0 auto;\r\n        font-weight: 200;\r\n    }\r\n    span {\r\n        font-size: 24px;\r\n        font-weight: 600;\r\n    }\r\n`;\r\nasync function updateUserData() {\r\n    try{ //Retrieve data from REST API endpoint, on success, update the profile Pic and UserData object, on failure, log the error.\r\n        const response = await axios.get('https://gc.uthd.dev/api/users'); //waits for axios to complete GET request to /api/users, returns an object \"user\"\r\n        userData = response.data.user;\r\n        if(userData.loggedIn == true) {\r\n            document.getElementById(\"profileImg\").src = `${userData.profileImg}`;\r\n            document.getElementById(\"profileImg\").classList.remove(\"hidden\");\r\n            document.getElementById(\"si-button\").classList.add(\"hidden\");\r\n        }\r\n    }\r\n    catch(err) {\r\n        console.log(err);\r\n    }\r\n}\r\n\r\n//Props getting\r\n/*\r\nexport async function getStaticPaths() {\r\n    const paths = await getAllPageSlugs();\r\n    return {\r\n        fallback: 'blocking',\r\n        paths\r\n    }\r\n  }\r\n\r\nexport async function getStaticProps({ params }) {\r\n    const pageData = await getPageDataFromSlug(params.slug);\r\n    return {\r\n        revalidate: 5,\r\n        props: {pageData}\r\n    }\r\n}\r\n\r\nasync function getAllPageSlugs () {\r\n    const pages = await getPages();\r\n    return pages.map(page => {\r\n        return {\r\n            params: {\r\n                slug: page.slug\r\n            }\r\n        }\r\n    })\r\n}*/\r\n\r\nexport default StreamerGameControl;"]},"metadata":{},"sourceType":"module"}